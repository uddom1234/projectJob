/* this here will override most default css when the width of the device screen hits 800px */
@media screen and (max-width: 800px) {
  .image-container {
    width: 200px;
    height: 150px;
  }
  .navHead li {
    font-size: 20px!important;
    padding: 10px;  
  }
  .fakeBtn {
    width: 50px!important;
    font-size: 10px!important;
  }
  #logo {
    display: none!important;
  }
  .mainCardBody {
    align-items: center!important;
    justify-content: center!important;
    text-align: center;
  }
  #mainSplitButton a {
    width: 300px!important;
    font-size: 20px!important;
  }
  #mainSplitButton {
    display: flex;
    justify-content: center;
  }
  .mainCardImage {
    display: none!important;
  }

  .mainCTACard h1{
    font-size: 20px;
    text-align: center;
  }
  .mainCTACard p{
    font-size: 12px;
    text-align: center;
  }
  .mainCTACard {
    padding: 2px!important;
  }
  .footerCard {
    height: 100px!important;
    display: flex;
    align-items: center;
    text-align: center;
    font-size: 10px;
  }
  .mainForm {
    width: 400px!important;

  }
  


  
}

a {
  text-decoration: none;
  font-weight: bold;
}


.navHead {
  list-style-type: none;
  flex-direction: row;
  display: flex;
  justify-content: space-around;
  flex: 1;
}

@media screen and (max-width: 1000px) and (min-width: 700px) {
  .mainForm {
    width: 350px!important;
  }
  .personalDet{
    flex-direction: column!important;
  }
  .applyInput{
    width:max-content!important;
  }
  .FinalApply{
    flex-direction: column!important;
  }
  input[type=submit],[type=reset]{
    width: 300px!important;
  }
}
@media screen and (max-width:700px) and (min-width:400px) {
  .personalDet{
    flex-direction: column!important;
  }
  .applyInput{
    width:max-content!important;
  }
  .mainForm{
    width: 300px!important;
  }
  .FinalApply{
    flex-direction: column!important;
  }
  input[type=submit],[type=reset]{
    width: 200px!important;
  }
}

/* makes the navigation bar sticky and less opacity. meaning when you scroll down, the bar stays at the position */
/* makes it on top of everything with z-index */
/* uses flex to adjust the children li for nav with space-evenly */
/* have a gradient color */
nav {
  opacity: 0.9;
  border-radius: 20px;
  position: sticky;
  z-index: 20;
  top: 20px;
  align-items: center;
  display: flex;
  background: rgb(2,0,36);
  background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(224,224,232,1) 0%, rgba(255,255,255,1) 17%, rgba(255,255,255,1) 100%);  transition: all 0.2s ease-in-out;
  flex-direction: row;
  display: flex;
  justify-content: space-evenly;
  flex: 1;
}

/* broke the div for navBlock into two to space it out properly*/
.navBlock {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
}

/* within the nav, i wanted to set the flex of the children divs for responsive design */
.leftNav {
  flex: 4
}

.rightNav {
  flex: 1
}

/* div for the main card nested within the nav*/
.mainCardPreview {
  margin-top: 20px;
  background: rgb(2,0,36);
  background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(224,224,232,1) 0%, rgba(255,255,255,1) 17%, rgba(255,255,255,1) 100%);  
  border-radius: 20px;
}

/* remove the bullet points for the navigation */
.navBlock a {
  text-decoration: none;
  color: black;
  font-weight: bold;
}

/* made a makeshift button that links to other pages */
.fakeBtn {
  background-color: #2D2727;
  padding: 10%;
  border-radius: 100px;
  width: 50%;
  display: flex;
  justify-content: center;
  transition: all 0.3s ease-in-out;
  color: white!important;
  align-items: center;
  text-align: center;
}

/* makes the button move up when you hover */
#fakeBtn:hover {
  transform: translate(0, -10%);
}

#fakeBtn a {
  color: white
}

/* makes the nav bar move up when you hover and adds shadows */
nav:hover {
  background-color: white;
  opacity: 1;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transform: translate(0, -10%);
}

a:hover {
  transform: translate(0, -10%);
}

/* ye logo that we designed ourself */
#logo {
  width: 7rem;
  transition: all 0.3s ease-in-out;
}

#logo:hover{
  transform: translate(0, -10%);
}

.navHead li {
  color: white;
  font-size: 1.5rem;
  transition: transform 0.3s ease-in-out;
}

/* moves each nav linker up when hovered to let the user know that they can click it */
.navHead li:hover{
  transform: translate(0, -20%);
}

/* add the default font to monospace */
body {
  font-family: monospace;
  background-color: rgb(225, 220, 220);
}

.mainCardBody {
  flex: 4;
  display: flex;
  flex-direction: row;
  padding: 1em;
}

/* this is the parent div for holding the navigation and main card */
.mainCardPreview{
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  transition: transform 0.3s ease-in-out;

}

.mainCardPreview:hover {
  transform: translate(0, -3%);
}

.mainCardSplit {
  width: 100%;
  display: flex;
  flex-direction: column;
}

/* so in the card, i split it into two, one for image, and one for putting all the texts
this is decorating and adjust the texts to the right place */
#mainSplitText {
  flex: 2;
  justify-content: center;
  display: flex;
  flex-direction: column;
}

#mainSplitButton a {  
  width: 500px;
  font-size: 30px;
  padding: 20px;
  height: 50px;
}

/* making another button that takes you to apply page */
.fakeBtnViewPlan {
  background-color: #609966;
  padding: 0!important;
  height: 50%;
  align-items: center;
  display: flex;
}

/* setting the size of the image to be 35% of div */
.mainCardSplit img {
  width: 35%;
  height: auto;
}

/* adding margins and making the display flex for the section */
#mainCTA {
  flex-direction: row;
  display: flex;
  margin-top: 1em;
}

/* have a class for the cards the cta sections and decorate it with margins, border radius, and more */
.mainCTACard {
  margin-left: 1em;
  margin-left: 1em;
  background-color: black;
  border-radius: 30px;
  height: 10rem;
  padding-left: 1em;
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  background-color: #609966;
  color: white;
}

#mainCTA a{
  border-bottom: 0;
  transition: transform 0.3s ease-in-out;
}

/* making the 3 cards in a row by adjusting the parent div */
#footerDiv {
  flex-direction: row;
  display: flex;
  margin-top: 1em;
  justify-content: space-around;
  width: 100%
}

/* so there are two divs, one for h1, and one for the cards
i want it to be column and centered */
footer {
  flex-direction: column;
  display: flex;
  margin-top: 1em;
  align-items: center;
}

footer a {
  transition: transform 0.3s ease-in-out;
  width: 30%;
}

footer a:hover{
  color: black;
  border-bottom: 0;
}

.footerCard {
  align-items: center;
  height: 20em;
  display: flex;
  padding: 1em;
  justify-content: center;
  border-radius: 20px;
  background-color: white;
  border: 1px solid black;
}


body{
  font-family: monospace;
  background-color: white;
}
/*CSS code for application page*/
#stateAddress{
  justify-content: flex-start;
}
/* style for the main body of the form*/
.mainForm{
  border-radius: 1%;
  flex-direction: column;
  display:flex;
  background-color: white;
  background-image:linear-gradient(to right, #699b69, rgb(198, 214, 204));
  width: 850px;
  opacity:0.9;
  justify-content: center;
  align-items: center;
}
/*changes the direction of the gradient while being hovered over*/
.mainForm:hover{
  background-image: linear-gradient(to left, #699b69,rgb(198,214,204));
}
.formCard{
  justify-content: center;
  align-items: center;
  margin-top: 10px;
}

/*for headings to grow and display shadow while being overed over*/

.applyH3:hover,.reference:hover{
  background-color: #4e6a50;
  box-shadow: 10px 10px 5px 10px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  text-align: center;
  border:40px  #0b0000;
  color:aliceblue;
  transform: scale(1.1);
}
.applyH3,.reference{
  border-radius: 30px;
  width: 200px;
  background-color: #639267;
  text-align: center;
  transition: transform 0.5s ease;
}
.personalContainer{
  display:flex;
  flex-direction:column;
  background-color: rgb(255, 255, 255);
  width: max-content;
}
/*for the containing elements to be aligned in a row*/
.personalDet{
  display:flex;
  flex-direction: row;
  
}

.personalContainer,.reference, .applyGender,.applyAddress, .contactInfo,.skills{
  background-color: rgb(255, 255, 255);
  transition: transform 0.5s ease-in-out ;
  box-shadow: 5px 10px 40px 5px rgba(184, 184, 184, 0.577) inset ;
  
}
/*each class moves upwards when hovered over*/
.personalContainer:hover,.reference:hover, .applyGender:hover,.applyAddress:hover, .contactInfo:hover,.skills:hover {
  transform: translate(0,-10%);
}
/*displays shadow when each fieldset is hovered over*/
fieldset:hover{
  box-shadow: 30px 30px 10px rgba(0,0,0,0.1);
}
/*input boxes are styles for when they are selected*/
input[type=text]:focus{
  background-image:linear-gradient(to right, rgba(132, 136, 132, 0.657), white);
  border: 4px double black;
}
/*styling of the submit and reset button*/
input[type=submit],[type=reset]{
  background-color: #62ab68;
  color:#0b0000 ;
  box-shadow: #173827;
  margin: 4px 4px;
  font-weight: bold;
  float: right;
  width:200px;
  height: 40px;
  border-bottom: 4px double #9ca7a2;
  border-radius:20px ;
}
/*making the submit nd reset button align in a row*/
.FinalApply{
  display: flex;
  flex-direction: row;
}
/*style for when the input boxes are hovered over*/
.reference:hover,.applyInput:hover {
  box-shadow: 4px 4px 4px #2c442e;
  background-color: #609966;
}

fieldset{
  border-top: 3px double black;
  border-left: 3px double black;
  border-radius: 20px;
  
}


#checkInput{
  border: 2px double #173827;
  box-shadow: #0b0000;
  border-radius: 20px;
  box-sizing: content-box;
} 

textarea{
  border-radius: 5px;
  border: 2px double black;
}

select{
  border-radius: 4px;
  }
body{
  font-family: monospace;
  font-size: large;
}

/* Provides the row orientation for parent jobs.html */
.orientation_1 {
  display: flex;
  flex-direction: row;
  justify-content: center;
}
/* Provides the row orientation for child jobs.html */
.orientation_2 {
  display: flex;
  flex-direction: row;
}
/* Provides the column orientation for child jobs.html */
.orientation_3 {
  display: flex;
  flex-direction: column;
}

/* gives important background colour for selected flexboxes jobs.html */
.grow_col {
  background-color: ghostwhite!important;
}

/* Provides characteristics for all flex boxes jobs.html */
.grow {
  padding: 5px 5px 5px 5px;
  border-radius:10px;
  height: 100px; 
  width: 85%; 
  margin: 8px 1% 5px 1%; 
  float: center; 
  position: relative; 
  text-align: left;
  background-color: #609966;
}

/* Centers all headings jobs.html */
.grow h1, 
.grow h2,
.grow h3 {
  text-align: center!important;
}

/* Gives unordred lists squares jobs.html */
.grow ul {
  list-style-type: square;
}

/* Gives ordered list lower roman numerals jobs.html */
.grow ol {
  list-style-type: lower-roman;
}

/* Box dimensions and details when hovering over jobs.html */
.grow:hover {
    height: auto;
    transform: all 1.0s;
    width: 85%;}

/* Hides text when not hoving over jobs.html */
.grow p,
.grow ul {
  display: none;} 

/* Displays text when hovering over jobs.html */
.grow:hover p, 
.grow:hover ul {
  display: block;}

/* Enhancement Main Card */

#enhancementMainSection {
  display: flex;
  align-items: center!important;
  justify-content: center!important;
  margin: 5% 40px 5% 40px;
}

#enhancementBackground {
  background: rgba(0, 0, 0, 0.5);
  border-radius: 10px;
  overflow: hidden;
  padding: 20px;
  width: 30rem;
}

.enchancementMainCard ul {
  list-style-type: none;
  display: flex;
  align-items: center!important;
  text-align: center;
  flex-direction: column;
  justify-content: space-evenly;
  margin-block-start: 0;
  margin-block-end: 0;
  margin-inline-start: 0px;
  margin-inline-end: 0px;
  padding-inline-start: 0;
  height: auto;
}

.enchancementMainCard li {
  padding: 10px 20px;
  color: #fff;
  border-radius: 5px;
  background: linear-gradient(120deg, #2a2a2a, #1e1e1e);
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 5px 5px;
}

.enchancementMainCard li:hover {
  transform: scale(1.1);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
}

.enchancementMainCard li:before {
  content: '';
  position: absolute;
  top: 50%;
  left: -5px;
  width: 5px;
  height: 5px;
  border-radius: 50%;
  transform: translateY(-50%);
}

.enchancementMainCard li:after {
  content: '';
  position: absolute;
  top: 50%;
  right: -5px;
  width: 5px;
  height: 5px;
  border-radius: 50%;
  transform: translateY(-50%);
}

form {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

fieldset{
  width : 90%
}
.aboutBody{
  background-color: white
}
.ok{ 
  text-align: center;
}

.info {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  
}

.team {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

}

.team table{
  width: 100%;
  border: none;

}

ul {
  list-style-type: none;
}

#ok {
  list-style: none;
  border-bottom: 1px solid black;
  text-align: center;
}

.ok1 {
  float: left;
}
#ok1 {
  clear: both;
  float: left;
}

.aboutUs-image-container {
  position: relative;
  width: 500px;
  height: 300px;
  overflow: hidden;
}

.aboutUs-image-container img {
  width: 100%;
  height: 100%;
  transition: transform 0.5s ease;
}

/* image zooms in */
.aboutUs-image-container:hover img {
  transform: scale(1.2);
}

/* when we hover over the image, an overlay pops up. the position, top, left, and transform is for centering it */
/* it starts with opacity 0 making it not show */
.image-hover {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 20px;
  background-color: rgba(96, 153, 102, 0.8);
  color: #fff;
  opacity: 0;
  transition: opacity 0.5s ease;
}

/* display the overlay when the image is hovered */
.aboutUs-image-container:hover .image-hover {
  opacity: 1;
}

/* decorate the overlay texts and centering it. gets rid of predefined margin and padding */
.image-hover h2 {
  font-size: 24px;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0;
  padding: 0;
}

.image-hover p {
  font-size: 16px;
}

/* aligns the div in the center: image, texts, and more */
#aboutUsSection {
  display: flex;
  flex-direction: column;
  align-items: center;
}


/*CSS code for enhancement */
/* hides text when not hovering over enhancement.html */
.en_responsive p,
.en_hovering p,
.en_hover p,
.en_cb p,
.en_ofin p,
.en_ofin img{
  display: none;
}
/* Displays text and flex box details for responsive when hovering over enhancement.html */
.en_responsive:hover,
.en_responsive:hover p{
  margin: 3.5% 3.5%;
  display:block;
  height: auto;
  width: 75%;
  transform: all 1.0s;
  text-align: center;
}
/* Displays text and flex box details for hovering when hovering over enhancement.html */
.en_hovering:hover,
.en_hovering:hover p {
  margin: 3.5% 3.5%;
  display:block;
  height: auto;
  width: 75%;
  transform: all 1.0s;
  text-align: center;
}
/* Displays text and flex box details for hover when hovering over enhancement.html */
.en_hover:hover,
.en_hover:hover p {
  margin: 3.5% 3.5%;
  display: block;
  height: auto;
  width: 75%;
  transform: all 1.0s;
  animation: spin 0.1s linear alternate;
  text-align: center;
}
/* Spins the flex box and text in hover enhancement.html */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
/* Displays text and flex box details for cb when hovering over enhancement.html */
}
.en_cb_col,.en_hover_hide,.en_overlay {color: white;}
.en_cb:hover,
.en_cb:hover p {
  margin: 3.5% 3.5%;
  display:block;
  height: auto;
  width: 75%;
  transform: all 1.0s;
  text-align: center;
  color: white;
}
/* Displays text and flex box details for of when hovering over enhancement.html */
.en_ofin:hover,
.en_ofin:hover p,
.en_ofin:hover img {
  margin: 3.5% 3.5%;
  display:block;
  height: auto;
  width: 75%;
  align-items: center;
  text-align: center;
}